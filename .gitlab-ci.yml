stages:
  - build-and-test
  - benchmark-completion

variables:
  PYTHONUNBUFFERED: "true"

before_script:
  - git submodule update --init

.build_and_test_job: &BUILD_AND_TEST
  stage: build-and-test
  tags: [benchmarks, infinity]
  script:
    - cmake . $CONF
    - make
    - ./SOM++ -cp ./Smalltalk ./TestSuite/TestHarness.som
    - ./unittests -cp ./Smalltalk:./TestSuite/BasicInterpreterTests ./Examples/Hello.som

    - rebench --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf all "e:${NAME}"

build_and_test:
  stage: build-and-test
  parallel:
    matrix:
      - MACHINE:
          - yuria
          - yuria2
          - yuria3
        COMPILER:
          - gcc
          - clang
        GC:
          - GENERATIONAL
          - MARK_SWEEP
          - COPYING
        INTEGERS:
          - "-DUSE_TAGGING=true"
          - "-DUSE_TAGGING=false -DCACHE_INTEGER=true"
          - "-DUSE_TAGGING=false -DCACHE_INTEGER=false"
  tags: [$MACHINE]
  script:
    - rm -rf cmake-build && mkdir cmake-build
    - if [ "$COMPILER" = "gcc" ];   then export CC=gcc-13;   export CXX=g++-13; fi
    - if [ "$COMPILER" = "clang" ]; then export CC=clang-17; export CXX=clang++-17; fi
    - cd cmake-build
    - cmake .. $INTEGERS -DGC_TYPE=$GC
    - make
    - ./SOM++ -cp ../Smalltalk ../TestSuite/TestHarness.som
    - ./unittests -cp ../Smalltalk:../TestSuite/BasicInterpreterTests ../Examples/Hello.som
# tagging_gen:
#   <<: *BUILD_AND_TEST
#   variables:
#     { CONF: "-DUSE_TAGGING=true -DGC_TYPE=GENERATIONAL", NAME: tag-gen }

# tagging_marksweep:
#   <<: *BUILD_AND_TEST
#   variables: { CONF: "-DUSE_TAGGING=true -DGC_TYPE=MARK_SWEEP", NAME: tag-mark }

# tagging_copying:
#   <<: *BUILD_AND_TEST
#   variables: { CONF: "-DUSE_TAGGING=true -DGC_TYPE=COPYING", NAME: tag-copy }

# boxed_generational_cached:
#   <<: *BUILD_AND_TEST
#   variables:
#     {
#       CONF: "-DUSE_TAGGING=false -DGC_TYPE=GENERATIONAL -DCACHE_INTEGER=true",
#       NAME: gen-cache,
#     }

# boxed_mark_sweep_cached:
#   <<: *BUILD_AND_TEST
#   variables:
#     {
#       CONF: "-DUSE_TAGGING=false -DGC_TYPE=MARK_SWEEP -DCACHE_INTEGER=true",
#       NAME: mark-cache,
#     }

# boxed_copying_cached:
#   <<: *BUILD_AND_TEST
#   variables:
#     {
#       CONF: "-DUSE_TAGGING=false -DGC_TYPE=COPYING -DCACHE_INTEGER=true",
#       NAME: copy-cache,
#     }

# boxed_generational_uncached:
#   <<: *BUILD_AND_TEST
#   variables:
#     {
#       CONF: "-DUSE_TAGGING=false -DGC_TYPE=GENERATIONAL -DCACHE_INTEGER=false",
#       NAME: gen,
#     }

# boxed_mark_sweep_uncached:
#   <<: *BUILD_AND_TEST
#   variables:
#     {
#       CONF: "-DUSE_TAGGING=false -DGC_TYPE=MARK_SWEEP -DCACHE_INTEGER=false",
#       NAME: mark,
#     }

# boxed_copying_uncached:
#   <<: *BUILD_AND_TEST
#   variables:
#     {
#       CONF: "-DUSE_TAGGING=false -DGC_TYPE=COPYING -DCACHE_INTEGER=false",
#       NAME: copy,
#     }

# complete_benchmarking:
#   stage: benchmark-completion
#   tags: [benchmarks, infinity]
#   script:
#     - rebench --experiment="CI ID $CI_PIPELINE_ID" --report-completion rebench.conf
